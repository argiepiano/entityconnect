<?php

/**
 * @file
 * Install, update & uninstall functions for the Entity Connect module.
 */

/**
 * Implements hook_requirements().
 */
function entityconnect_requirements($phase) {
  $requirements = array();

  switch ($phase) {
    case 'install':
      $t = get_t();
      $path = backdrop_get_path('module', 'entityconnect') . '/entityconnect.info';
      $info = backdrop_parse_info_file($path);

      $requirements['entityconnect'] = array();
      $requirements['entityconnect']['title'] = $info['name'];
      $requirements['entityconnect']['value'] = $info['version'];

      // At least one of the following modules is required in order for
      // entityconnect to function properly.
      $singularly_required_modules = array(
        'entityreference',
        'node_reference',
        'user_reference',
      );
      // If this module is being installed as part of a Backdrop installation,
      // check for the existence of required modules without relying on the
      // "module_exists()" function, which will always return false for these
      // modules during a Backdrop installation.
      if (backdrop_installation_attempted()) {
        $files = backdrop_system_listing('/^' . BACKDROP_PHP_FUNCTION_PATTERN . '\.info$/', 'modules', 'name', 0);
        foreach ($singularly_required_modules as $module_name) {
          if (isset($files[$module_name])) {
            $requirements['entityconnect']['severity'] = REQUIREMENT_OK;
            break;
          }
        }
      }
      // If this module is being installed manually (after Backdrop has been
      // installed), check to ensure that one of the required modules exists
      // and is enabled.
      else {
        foreach ($singularly_required_modules as $module_name) {
          if (module_exists($module_name)) {
            $requirements['entityconnect']['severity'] = REQUIREMENT_OK;
            break;
          }
        }
      }

      if (!isset($requirements['entityconnect']['severity'])) {
        $requirements['entityconnect']['severity'] = REQUIREMENT_ERROR;
        $requirements['entityconnect']['description'] = $t(
          'Neither Entityreference nor References module is installed or activated.
          Entityconnect needs at least one of those modules to work.'
        );
      }

      break;
  }

  return $requirements;
}


/**
 * Implements hook_schema().
 */
function entityconnect_schema() {
  $schema = array();
  $schema['cache_entityconnect'] = backdrop_get_schema_unprocessed('system', 'cache');
  return $schema;
}

/**
 * Implements hook_install().
 */
function entityconnect_install() {
  // We need to run after the workbench_email module so that our
  // entityconnect_return redirect works properly.
  db_update('system')
    ->fields(array('weight' => 1))
    ->condition('name', 'entityconnect')
    ->condition('type', 'module')
    ->execute();
}

/**
 * Implements hook_update_last_removed().
 */
function entityconnect_update_last_removed() {
  return 7200;
}

/**
 * Migrate entityconnect variables to config.
 */
function entityconnect_update_1000() {
  $config = config('entityconnect.settings');
  $config->set('entityconnect_cache_lifetime', update_variable_get('entityconnect_cache_lifetime', CACHE_PERMANENT));
  $config->set('entityconnect_unload_add_default', update_variable_get('entityconnect_unload_add_default', '1'));
  $config->set('entityconnect_unload_edit_default', update_variable_get('entityconnect_unload_edit_default', '1'));
  $config->set('entityconnect_show_add_icon_default', update_variable_get('entityconnect_show_add_icon_default', '0'));
  $config->set('entityconnect_show_edit_icon_default', update_variable_get('entityconnect_show_edit_icon_default', '0'));
  $config->save();

  update_variable_del('entityconnect_cache_lifetime');
  update_variable_del('entityconnect_unload_add_default');
  update_variable_del('entityconnect_unload_edit_default');
  update_variable_del('entityconnect_show_add_icon_default');
  update_variable_del('entityconnect_show_edit_icon_default');
}
